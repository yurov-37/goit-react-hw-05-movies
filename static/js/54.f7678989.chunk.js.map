{"version":3,"file":"static/js/54.f7678989.chunk.js","mappings":"uQAKaA,EAAY,mCAAG,WAAMC,GAAN,uFACHC,EAAAA,EAAAA,IAAA,UAJR,gCAIQ,iBACDD,EADC,4BAHT,qCAEY,cACpBE,EADoB,yBAKnBA,EAASC,KAAKC,MALK,2CAAH,sD,iDCHZC,EAAYC,EAAAA,EAAAA,GAAH,iPAYTC,EAAYD,EAAAA,EAAAA,IAAH,gEAKTE,EAAYF,EAAAA,EAAAA,EAAH,wFAMTG,EAAiBH,EAAAA,EAAAA,EAAH,4CAIdI,EAAaJ,EAAAA,EAAAA,IAAH,2C,SCpBR,SAASK,EAAT,GAAoD,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACtD,OACE,UAACT,EAAD,YACE,SAACK,EAAD,CACEK,IAAKD,EAAM,0CAAsCA,GAAWE,EAC5DC,IAAKJ,EACLK,MAAM,SAER,UAACX,EAAD,YACE,SAACC,EAAD,UAAYK,KACZ,SAACJ,EAAD,UAAiBG,SAIxB,CCrBM,IAAMO,EAAcb,EAAAA,EAAAA,GAAH,kLCCT,SAASc,EAAT,GAAoC,IAAhBC,EAAe,EAAfA,YACjC,OACE,SAACF,EAAD,UACGE,EAAYC,KAAI,YAAsC,IAAnCtB,EAAkC,EAAlCA,GAAIY,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvC,OACE,SAACH,EAAD,CAEEC,UAAWA,EACXC,KAAMA,EACNC,OAAQA,GAHHd,EAMV,KAGN,CCXc,SAASuB,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOtB,EAAP,KAAauB,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEUC,EAAkB,GAF5B,SAG2BlC,EAAayB,GAHxC,cAIaF,KAAI,YAA4C,IACjDY,EAAc,CAAElC,GADgC,EAAxCA,GACYY,UAD4B,EAApCA,UACmBC,KADiB,EAAzBA,KACcC,OADW,EAAnBqB,cAEnC,OAAOF,EAAgBG,KAAKF,EAC7B,IACDP,EAAQM,GARZ,gDAUIJ,EAAS,EAAD,IAVZ,yBAYIE,GAAa,GAZjB,6EAFc,sBACdA,GAAa,GADC,mCAiBdM,EACD,GAAE,CAACb,KAGF,UAAC,IAAD,WACGM,IAAa,SAAC,KAAD,CAAWQ,MAAM,YAC9BV,IAAS,2EACTxB,EAAKmC,OAAS,GACb,SAACnB,EAAD,CAAUC,YAAajB,KAEvB,yEAIP,C","sources":["api/getMovieCast.js","components/CastListItem/CastListItem.styled.jsx","components/CastListItem/CastListItem.jsx","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'cd5b2d3acc514f77d882945a59cba433';\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n};\n","import styled from '@emotion/styled';\n\nexport const ActorCard = styled.li`\n  /* position: relative; */\n\n  padding: 10px;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid black;\n`;\n\nexport const ActorInfo = styled.div`\n  padding: 8px;\n  text-align: center;\n`;\n\nexport const ActorName = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  margin-bottom: 4px;\n`;\n\nexport const ActorCharacter = styled.p`\n  font-size: 18px;\n`;\n\nexport const ActorPhoto = styled.img`\n  flex: 1 0 auto;\n`;\n","import LolPicture from '../../data/images/lol.png';\nimport {\n  ActorCard,\n  ActorInfo,\n  ActorName,\n  ActorCharacter,\n  ActorPhoto,\n} from './CastListItem.styled';\n\nexport default function CastListItem({ character, name, poster }) {\n  return (\n    <ActorCard>\n      <ActorPhoto\n        src={poster ? `https://image.tmdb.org/t/p/w500/${poster}` : LolPicture}\n        alt={name}\n        width=\"250\"\n      />\n      <ActorInfo>\n        <ActorName>{name}</ActorName>\n        <ActorCharacter>{character}</ActorCharacter>\n      </ActorInfo>\n    </ActorCard>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const CastGallery = styled.ul`\n  padding: 20px 0;\n  border-top: 1px dotted black;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(285px, 1fr));\n  grid-gap: 1em;\n`;\n","import CastListItem from 'components/CastListItem/CastListItem';\nimport { CastGallery } from './CastList.styled';\n\nexport default function CastList({ arrayOfCast }) {\n  return (\n    <CastGallery>\n      {arrayOfCast.map(({ id, character, name, poster }) => {\n        return (\n          <CastListItem\n            key={id}\n            character={character}\n            name={name}\n            poster={poster}\n          />\n        );\n      })}\n    </CastGallery>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'api/getMovieCast';\nimport { Container } from 'components/Container/Container.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport CastList from 'components/CastList/CastList';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    async function getCastData() {\n      try {\n        const castDataForList = [];\n        const response = await getMovieCast(movieId);\n        response.map(({ id, character, name, profile_path }) => {\n          const oneCastData = { id, character, name, poster: profile_path };\n          return castDataForList.push(oneCastData);\n        });\n        setCast(castDataForList);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getCastData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <ThreeDots color=\"#3f51b5\" />}\n      {error && <h2>Data processing error. Try reloading the page.</h2>}\n      {cast.length > 0 ? (\n        <CastList arrayOfCast={cast} />\n      ) : (\n        <p>There is no cast information for this movie</p>\n      )}\n    </Container>\n  );\n}\n"],"names":["getMovieCast","id","axios","response","data","cast","ActorCard","styled","ActorInfo","ActorName","ActorCharacter","ActorPhoto","CastListItem","character","name","poster","src","LolPicture","alt","width","CastGallery","CastList","arrayOfCast","map","Cast","movieId","useParams","useState","setCast","error","setError","isLoading","setIsLoading","useEffect","castDataForList","oneCastData","profile_path","push","getCastData","color","length"],"sourceRoot":""}