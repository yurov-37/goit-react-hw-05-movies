{"version":3,"file":"static/js/633.88cb7f3a.chunk.js","mappings":"kQAKaA,EAAe,mCAAG,WAAMC,GAAN,uFACNC,EAAAA,EAAAA,IAAA,UAJR,gCAIQ,iBACDD,EADC,4BAHT,mCAGS,2BADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sD,uCCHfC,EAAYC,EAAAA,EAAAA,GAAH,6KAQTC,EAAeD,EAAAA,EAAAA,EAAH,sF,SCRV,SAASE,EAAT,GAA0C,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC3C,OACE,UAACL,EAAD,YACE,SAACE,EAAD,UAAeE,KACf,uBAAIC,MAGT,CCPM,IAAMC,EAAgBL,EAAAA,EAAAA,GAAH,6ECCX,SAASM,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,eACpC,OACE,SAACF,EAAD,UACGE,EAAeC,KAAI,YAA8B,IAA3Bd,EAA0B,EAA1BA,GAAIS,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACjC,OACE,SAACF,EAAD,CAAqBC,OAAQA,EAAQC,QAASA,GAA7BV,EAEpB,KAGN,CCNc,SAASe,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAqBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEUC,EAAqB,GAF/B,SAG2B3B,EAAgBiB,GAH3C,cAIaF,KAAI,YAA8B,IACnCa,EAAgB,CAAE3B,GADgB,EAA1BA,GACcS,OADY,EAAtBA,OACkBC,QADI,EAAdA,SAE1B,OAAOgB,EAAmBE,KAAKD,EAChC,IACDP,EAAWM,GARf,gDAUIJ,EAAS,EAAD,IAVZ,yBAYIE,GAAa,GAZjB,6EAFc,sBACdA,GAAa,GADC,mCAiBdK,EACD,GAAE,CAACb,KAGF,UAAC,IAAD,WACGO,IAAa,SAAC,KAAD,CAAWO,MAAM,YAC9BT,IAAS,2EACTF,EAAQY,OAAS,GAChB,SAACnB,EAAD,CAAaC,eAAgBM,KAE7B,+DAIP,C","sources":["api/getMovieReviews.js","components/ReviewItem/ReviewItem.styled.jsx","components/ReviewItem/ReviewItem.jsx","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'cd5b2d3acc514f77d882945a59cba433';\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewBox = styled.li`\n  padding: 10px;\n  border: 1px solid black;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\nexport const ReviewAuthor = styled.b`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n","import { ReviewAuthor, ReviewBox } from './ReviewItem.styled';\n\nexport default function ReviewItem({ author, content }) {\n  return (\n    <ReviewBox>\n      <ReviewAuthor>{author}</ReviewAuthor>\n      <p>{content}</p>\n    </ReviewBox>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ReviewGallery = styled.ul`\n  padding: 20px 0;\n  border-top: 1px dotted black;\n`;\n","import ReviewItem from 'components/ReviewItem/ReviewItem';\nimport { ReviewGallery } from './ReviewsList.styled';\n\nexport default function ReviewsList({ arrayOfReviews }) {\n  return (\n    <ReviewGallery>\n      {arrayOfReviews.map(({ id, author, content }) => {\n        return (\n          <ReviewItem key={id} author={author} content={content}></ReviewItem>\n        );\n      })}\n    </ReviewGallery>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/getMovieReviews';\nimport { Container } from 'components/Container/Container.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    async function getReviewsData() {\n      try {\n        const reviewsDataForList = [];\n        const response = await getMovieReviews(movieId);\n        response.map(({ id, author, content }) => {\n          const oneReviewData = { id, author, content };\n          return reviewsDataForList.push(oneReviewData);\n        });\n        setReviews(reviewsDataForList);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getReviewsData();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <ThreeDots color=\"#3f51b5\" />}\n      {error && <h2>Data processing error. Try reloading the page.</h2>}\n      {reviews.length > 0 ? (\n        <ReviewsList arrayOfReviews={reviews} />\n      ) : (\n        <p>There is no reviews on this movie</p>\n      )}\n    </Container>\n  );\n}\n"],"names":["getMovieReviews","id","axios","response","data","results","ReviewBox","styled","ReviewAuthor","ReviewItem","author","content","ReviewGallery","ReviewsList","arrayOfReviews","map","Reviews","movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","reviewsDataForList","oneReviewData","push","getReviewsData","color","length"],"sourceRoot":""}