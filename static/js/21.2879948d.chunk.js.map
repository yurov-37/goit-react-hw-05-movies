{"version":3,"file":"static/js/21.2879948d.chunk.js","mappings":"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","sources":["api/getMovieDetails.js","components/ReturnButton/ReturnButton.styled.jsx","components/ReturnButton/ReturnButton.jsx","components/SingleMovieCard/SingleMovieCard.styled.jsx","components/SingleMovieCard/SingleMovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'cd5b2d3acc514f77d882945a59cba433';\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const OnReturnBtn = styled(Link)`\n  color: inherit;\n  margin-top: 10px;\n  border: 1px solid black;\n  background-color: #d5d9d9;\n  border-radius: 8px;\n  box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 20px;\n  padding: 4px 10px;\n  text-align: center;\n  text-decoration: none;\n  width: 100px;\n  transition: all 0.3s ease-in;\n\n  &:hover {\n    background-color: #f7fafa;\n  }\n\n  &:focus {\n    border-color: #008296;\n    box-shadow: rgba(213, 217, 217, 0.5) 0 2px 5px 0;\n    outline: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { OnReturnBtn } from './ReturnButton.styled';\n\nexport default function ReturnButton({ linkBack }) {\n  return <OnReturnBtn to={linkBack}> â—„ Back </OnReturnBtn>;\n}\n\nReturnButton.propTypes = {\n  linkBack: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px 0;\n`;\n\nexport const MovieCardPoster = styled.img`\n  border-radius: 10px;\n  margin-right: 60px;\n`;\n\nexport const MovieCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`;\n\nexport const MovieCardTitle = styled.h3`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieCardRating = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const MovieCardLink = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  & p {\n    margin-right: 8px;\n  }\n`;\n\nexport const MovieCardBudget = styled.p`\n  margin-bottom: 10px;\n`;\nexport const MovieCardGenres = styled.ul`\n  display: flex;\n  margin-bottom: 10px;\n\n  & li:not(:last-child) {\n    margin-right: 5px;\n  }\n\n  & p {\n    margin-right: 8px;\n  }\n`;\n\nexport const MovieLinksBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieLinksText = styled.p`\n  font-size: 20px;\n  text-decoration: underline;\n  margin-bottom: 8px;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  font-weight: 500;\n  width: 100px;\n  padding: 5px;\n  display: flex;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n\n  &.active {\n    background-color: #929eaa96;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #41259e;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from 'components/Container/Container.styled';\nimport LolPicture from '../../data/images/lol.png';\nimport ReturnButton from 'components/ReturnButton/ReturnButton';\nimport {\n  MovieCardWrapper,\n  MovieCardPoster,\n  MovieCardInfo,\n  MovieCardTitle,\n  MovieCardLink,\n  MovieCardBudget,\n  MovieCardGenres,\n  MovieCardRating,\n  MovieLinksBlock,\n  MovieLink,\n  MovieLinksText,\n} from './SingleMovieCard.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport default function SingleMovieCard({ movieInfo }) {\n  const location = useLocation();\n  const { title, genres, budget, homepage, poster, description, rating } =\n    movieInfo;\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <Container>\n      <ReturnButton linkBack={backLinkHref} />\n      <MovieCardWrapper>\n        <MovieCardPoster\n          src={\n            poster ? `https://image.tmdb.org/t/p/w500/${poster}` : LolPicture\n          }\n          alt={title}\n          width=\"360\"\n        />\n        <MovieCardInfo>\n          <MovieCardTitle>{title}</MovieCardTitle>\n          <MovieCardRating>Rating: {rating.toFixed(1)}</MovieCardRating>\n          <MovieCardLink>\n            <p>Official website:</p>\n            <a href={homepage}>{homepage}</a>\n          </MovieCardLink>\n          <MovieCardBudget>Budget: {budget}</MovieCardBudget>\n          <MovieCardGenres>\n            <p>Genres:</p>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </MovieCardGenres>\n          <b>Overview</b>\n          <p>{description}</p>\n          <MovieLinksBlock>\n            <MovieLinksText>Additional Information</MovieLinksText>\n            <MovieLink to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </MovieLink>\n            <MovieLink to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </MovieLink>\n          </MovieLinksBlock>\n        </MovieCardInfo>\n      </MovieCardWrapper>\n    </Container>\n  );\n}\n\nSingleMovieCard.propTypes = {\n  movieInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      genres: PropTypes.arrayOf(PropTypes.shape),\n      budget: PropTypes.number,\n      homepage: PropTypes.string,\n      poster: PropTypes.string,\n      description: PropTypes.string,\n      rating: PropTypes.number,\n    })\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api/getMovieDetails';\nimport SingleMovieCard from 'components/SingleMovieCard/SingleMovieCard';\nimport { Container } from 'components/Container/Container.styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    async function getDetailsData() {\n      try {\n        const response = await getMovieDetails(movieId);\n\n        const {\n          budget,\n          genres,\n          homepage,\n          original_title,\n          overview,\n          poster_path,\n          vote_average,\n        } = response.data;\n\n        const movieData = {\n          title: original_title,\n          genres: genres,\n          budget: budget,\n          homepage: homepage,\n          poster: poster_path,\n          description: overview,\n          rating: vote_average,\n        };\n        setMovieData(movieData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getDetailsData();\n  }, [movieId]);\n  return (\n    <Container>\n      {isLoading && <ThreeDots color=\"#3f51b5\" />}\n      {error && <h2>Data processing error. Try reloading the page.</h2>}\n      {movieData && <SingleMovieCard movieInfo={movieData} />}\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["getMovieDetails","id","axios","response","OnReturnBtn","styled","Link","ReturnButton","linkBack","to","MovieCardWrapper","MovieCardPoster","MovieCardInfo","MovieCardTitle","MovieCardRating","MovieCardLink","MovieCardBudget","MovieCardGenres","MovieLinksBlock","MovieLinksText","MovieLink","NavLink","SingleMovieCard","movieInfo","location","useLocation","title","genres","budget","homepage","poster","description","rating","backLinkHref","state","from","src","LolPicture","alt","width","toFixed","href","map","genre","name","MovieDetails","movieId","useParams","useState","movieData","setMovieData","error","setError","isLoading","setIsLoading","useEffect","data","original_title","overview","poster_path","vote_average","getDetailsData","color"],"sourceRoot":""}